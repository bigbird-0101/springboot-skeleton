server:
  port: 8099

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.nango.skeletonweb.domain.entity
spring:
  application:
    name: shatding-springboot-mybatis
sharding:
  jdbc:
    datasource:
      names: ds0
      # 数据源ds0
      ds0:
        url: jdbc:mysql://localhost:3306/test
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        username: root
        password: 123456
    config:
      sharding:
        props:
          sql.show: true
        tables:
          t_user:  #t_user表
            key-generator-column-name: id  #主键
            actual-data-nodes: ds0.t_user${0..1}    #数据节点,均匀分布
            table-strategy:  #分表策略
              standard:
                sharding-column: sex
                precise-algorithm-class-name: com.nango.skeletonweb.infrastructure.shardingAlgorithm.UserShardingAlgorithm
          t_address:  #t_address
            key-generator-column-name: id  #主键
            actual-data-nodes: ds0.t_address${0..1}    #数据节点,均匀分布
            table-strategy:  #分表策略
              standard:
                sharding-column: id
                precise-algorithm-class-name: com.nango.skeletonweb.infrastructure.shardingAlgorithm.UserShardingAlgorithm
          t_account:
            key-generator-column-name: id  #主键
            actual-data-nodes: ds0.t_account${2020..2021}${0..1}    #数据节点,均匀分布
            table-strategy:  #分表策略
              standard:
                sharding-column: id
                precise-algorithm-class-name: com.nango.skeletonweb.infrastructure.shardingAlgorithm.UserShardingAlgorithm

#              inline: #行表达式
#                skeletonweb-column: sex
#                algorithm-expression: t_user${sex % 2}  #按模运算分配
#        default-table-strategy:
#          inline: #行表达式
#            skeletonweb-column: sex
#            algorithm-expression: t_user${sex % 2}  #按模运算分配